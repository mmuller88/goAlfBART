language: node_js
services: docker
sudo: required
node_js:
  - v12

before_install:
  - sudo /etc/init.d/postgresql stop
  # remove volume which create a permission denied issue
  - sed -i '\|logs/postgres|d' ./docker-compose.yml

stages:
  - name: Deploy Test

env:
  pushS3: true
  showDockerComposeOutput: false

jobs:
  include:
    - stage: Deploy Test
      name: Deploy with start script
      script:
        - |
          chmod +x start.sh
          if ${showDockerComposeOutput} ; then
            ./start.sh
          else
            ./start.sh > /dev/null
          fi
        # - chmod +x start.sh && ./start.sh > /dev/null
        - curl -sSL https://git.io/gobackup | bash
        - gobackup -h
        - gobackup -v
        - PWD=$(pwd)
        - |
          if ${pushS3} ; then
            sed -i -e 's#@@AWS_ACCESS_KEY_ID@@#'${AWS_ACCESS_KEY_ID}'#g' -e 's#@@AWS_SECRET_ACCESS_KEY@@#'${AWS_SECRET_ACCESS_KEY}'#g' -e 's#@@PWD@@#'${PWD}'#g' gobackups3.yml
            mv gobackups3.yml gobackup.yml
          else
            mv gobackupslocal.yml gobackup.yml
          fi
        - cat gobackup.yml
        - gobackup perform
        - echo 'pwd= ' && pwd
        - ls
        - ls /tmp/gobackup/
        - ls
        - ls alf-test/data

after_failure:
  - docker-compose config
  - docker-compose logs
